#labels Featured
#Using naxsi learning mode (starting from v0.44)


== nx_intercept.py ==

<code>
$ python nx_intercept.py  -h
Usage: python nx_intercept [-h,--help] [-p,--port portnumber] [-a,--add-monitoring ip:1.2.3.4|md5:af794f5e532d7a4fa59c49845af7947e]
</code>

The learning daemon itself, even if he does a very limited job. 

Basically, it should be pointed by your /RequestDenied location while in learning mode, in order to receive "to-be-blocked" requests.

When doing so, the nx_intercept.py daemon will store naxsi signatures extracted from the HTTP requests into a MySQL database.

It can as well, store the HTTP requests for further analysis if you ask
 him. (see --add-monitoring - still experimental :p)


== nx_extract.py ==

<code>
Usage : python nx_extract [-h,--help] [-p|--port portnumber] [-r|--rules /path/to/naxsi_core.rules] [-a|--allow allow user to specify rules path]
</code>

The daemon you use to obtain whitelists generated by naxsi. Runs by default on port 8081, you will find help here.

== Setup ==

Configure MySQL in sql_id : database, username, host and password.
And you're good to go !

== Example ==

my sites-enabled/foobar :
<code>
server {
 proxy_set_header Proxy-Connection "";
listen       *:80;
access_log  /tmp/nginx_access.log;
error_log  /tmp/nginx_error.log debug;

server_name blog.memze.ro; 

location / {
     include    /etc/nginx/memzero.rules;
     proxy_pass http://88.191.133.106/;
     proxy_set_header Host blog.memze.ro;
   }

 location /RequestDenied {
      proxy_pass http://127.0.0.1:8000;
   }
}
</code>


my /etc/nginx/memzero.rules :
<code>
LearningMode;
SecRulesEnabled;
#SecRulesDisabled;
DeniedUrl "/RequestDenied";

## check rules
CheckRule "$SQL >= 8" BLOCK;
CheckRule "$RFI >= 8" BLOCK;
CheckRule "$TRAVERSAL >= 4" BLOCK;
CheckRule "$EVADE >= 4" BLOCK;
CheckRule "$XSS >= 8" BLOCK;
</code>